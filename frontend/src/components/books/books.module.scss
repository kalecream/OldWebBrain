@import '@styles/mediaQuery';

.paragraph {
	font-size: 1.1rem;
	max-width: 55rem;
	margin-bottom: 0.5rem;
	margin: 0 auto;

	& a {
		text-decoration: none;
		color: var(--textColor);
		// border-bottom: 2px solid var(--primary);
		margin-bottom: 0.15rem;
	}
}

// CurrentReads

.reading {
	display: flex;
	flex-wrap: wrap;
	min-height: 0;
	place-items: center;
	place-content: center;

	@include breakpoint-range($from: mobile, $to: tablet) {
		& > * {
			margin: 0;
			text-decoration: none;
		}
	}

	@include breakpoint-range($from: tablet, $to: desktopLarge) {
		& > * {
			margin: 1rem 0.5rem;
		}
	}
}

.books {
	display: flex;
	align-items: center;
	justify-content: center;
	perspective: 600px;
	margin: 0;
}

.book {
	margin: 0rem -1.5rem;
	width: 200px;
	height: 300px;
	position: relative;
	transform-style: preserve-3d;
	transform: rotateY(-30deg);
	transition: 1s ease;
	animation: 1s ease 0s 1 initAnimation;
	scale: 0.7;

	&:hover {
		transform: rotateY(0deg);
	}

	& > :first-child {
		position: absolute;
		top: 0;
		left: 0;
		background-color: red;
		width: 200px;
		height: 300px;
		transform: translateZ(25px);
		background-color: var(--primary);
		border-radius: 0 2px 2px 0;
		box-shadow: 5px 5px 20px var(--textColorFade);
	}

	&::before {
		position: absolute;
		content: ' ';
		background-color: blue;
		left: 0;
		top: 3px;
		width: 48px;
		height: 294px;
		transform: translateX(172px) rotateY(90deg);
		background: linear-gradient(
			90deg,
			#fff 0%,
			#f9f9f9 5%,
			#fff 10%,
			#f9f9f9 15%,
			#fff 20%,
			#f9f9f9 25%,
			#fff 30%,
			#f9f9f9 35%,
			#fff 40%,
			#f9f9f9 45%,
			#fff 50%,
			#f9f9f9 55%,
			#fff 60%,
			#f9f9f9 65%,
			#fff 70%,
			#f9f9f9 75%,
			#fff 80%,
			#f9f9f9 85%,
			#fff 90%,
			#f9f9f9 95%,
			#fff 100%
		);
	}

	&::after {
		position: absolute;
		top: 0;
		left: 0;
		content: ' ';
		width: 200px;
		height: 300px;
		transform: translateZ(-25px);
		background-color: #5e5c64;
		border-radius: 0 2px 2px 0;
		box-shadow: var(--boxShadow);
	}
}

@keyframes initAnimation {
	0% {
		transform: rotateY(0deg);
	}
	100% {
		transform: rotateY(-30deg);
	}
}

.bookDetails {
	display: block;
	width: 90%;
	margin: 1rem auto;

	&[open] > summary::before {
		content: 'ðŸ“–';
		transform: rotate(25deg);
	}

	@include breakpoint-range($from: mobile, $to: tablet) {
		width: 90%;
		border: var(--border);
		border-radius: var(--borderRadius);
	}

	@include breakpoint-range($from: tablet) {
		width: 100%;
	}
}

.bookDetails summary {
	position: relative;
	cursor: pointer;
	user-select: none;
	text-transform: capitalize;

	&::before {
		content: 'ðŸ“•'; // ðŸ“• ðŸ“— ðŸ“˜ ðŸ“™ ðŸ“” ðŸ““ ðŸ“’ ðŸ“š ðŸ“–
		position: absolute;
		left: 8px;
		transform: rotate(0deg);
		transition: transform 0.3s ease;
	}

	@include breakpoint-range($from: mobile, $to: tablet) {
		margin: 0 0.15rem;
		padding: 1rem;
	}

	@include breakpoint-range($from: tablet) {
		margin: 0 2rem;
		padding: 1rem;
	}
}

.bookList {
	font-size: 0.9rem;
	padding: 1rem;
	border: var(--border);
	border-radius: var(--borderRadius);

	& a {
		font-size: 1rem;
	}
}

// PhotoGallery

.photoContainer {
	position: relative;

	@include breakpoint-range($from: mobile, $to: tablet) {
		display: none;
	}

	@include breakpoint-range($from: tablet, $to: desktopLarge) {
		top: 60%;
		left: -35%;
		max-width: 800px;
		margin-right: 2rem;
	}
}

.picture {
	display: inline-block;
	position: absolute;
	top: 0;
	left: 0;
	border: 5px solid var(--borderColor);
	border-radius: ar(--borderRadius);
	background: var(--backgroundColor);
	box-shadow: 0 0 20px rgba(0, 0, 0, 0.25);
	transform: translate(-50%, -50%);
	user-select: none;
	cursor: pointer;

	& img {
		display: block;
		width: 200px;
		pointer-events: none;
	}

	& span {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 200px;
		height: 50px;
		padding: 12px 24px;
		font-size: 1rem;
		text-align: center;
		font-family: 'Caveat', 'Inter', sans-serif;
		overflow: hidden;
		line-height: 1;
	}

	@include breakpoint-range($from: tablet, $to: desktopSmall) {
	}

	@include breakpoint-range($from: desktopSmall) {
	}
}
