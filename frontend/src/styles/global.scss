@import 'normalize';
@import 'typography';
@import 'animations';
@import 'mediaQuery';

$primary: rgb(17, 158, 160) ;
$secondary: rgba(14, 174, 87, 1);
$borderRadius: 5px;
$padding-container: 1rem 3rem;
$padding-object: 1rem;
$padding-object-small: 0.5rem;
$heading-font: 'Inter', sans-serif;
$accentFont: 'Sims Sans SC', sans-serif;
$body-font: 'Inter', sans-serif;
$blur: 20px;
$box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
$gradient:  radial-gradient(
    circle farthest-corner at 10% 20%,
    rgba(14, 174, 87, 1) 0%,
    rgba(12, 116, 117, 1) 90%
  );
$circle-gradient: radial-gradient(100% 100% at 100% 0, var(--primary) 0, var(--secondary) 100%);
$transition: all 0.3s ease-in-out;

// https://medium.com/@dmitriy.borodiy/easy-color-theming-with-scss-bc38fd5734d1
$themes: (
  light: (
    primary: $secondary,
    secondary: $primary,
    backgroundColor: #fff,
    textColor: #222,
    textColorFade: rgba(34, 34, 34, 0.8),
    captionColor: #aaa,
    buttonTextColor: $secondary,
    buttonTextTransform: none,
    buttonTextHoverColor: $secondary,
    buttonColor: #fff,
    buttonBorder: 2px solid rgba(255, 255, 255, 0.3),
    border: 1px solid rgba(255, 255, 255, 0.4),
    borderColor: rgba(255, 255, 255, 0.4),
    borderRadius: $borderRadius,
    paddingContainer: $padding-container,
    paddingObject: $padding-object,
    paddingObjectSmall: $padding-object-small,
    boxShadow: 1px 4px 16px 0 rgba(0, 0, 0, 0.2),
    transition: $transition,
    loadingBackground: $gradient,
    loadingTextColor: #fff,
    bodyFont: $body-font,
    headingFont: $heading-font,
    accentFont: $accentFont,
  ),
  dark: (
    primary: $primary,
    secondary: $secondary,
    backgroundColor: #222,
    textColor: #ddd,
    textColorFade: rgba(221, 221, 221, 0.8),
    captionColor: #aaa,
    buttonTextColor: #aaa,
    buttonTextTransform: uppercase,
    buttonTextHoverColor: #ddd,
    buttonColor: #333,
    buttonBorder: 1px solid rgba(0, 0, 0, 0.23),
    border: 1px solid rgba(0, 0, 0, 0.23),
    borderColor: rgba(0, 0, 0, 0.23),
    borderRadius: $borderRadius,
    paddingContainer: $padding-container,
    paddingObject: $padding-object,
    paddingObjectSmall: $padding-object-small,
    boxShadow: 1px 4px 16px 0 rgba(0, 0, 0, 0.2),
    transition: $transition,
    loadingBackground: $gradient,
    loadingTextColor: #fff,
    bodyFont: $body-font,
    headingFont: $heading-font,
    accentFont: $accentFont,
  ),
);

// source: https://stackoverflow.com/questions/57815278/scss-theming-with-dynamic-variables
@each $name, $map in $themes {
    .#{$name} {
        @each $key, $value in $map {
            --#{$key}: #{$value};
        }
    }
} 


html {
	color: var(--textColor);
	line-height: 1.2;
	font-family: var(--bodyFont);
}

header {
	// there's two bars whenever i make it sticky ???
	position: fixed;
	top: 0;
	width: 100vw;
	justify-content: space-between;
	align-items: center;
	display: flex;
	flex-wrap: wrap;
	z-index: 5;

	@include breakpoint-range($from: mobile, $to: tablet) {
		padding: 1rem;
	}

	@include breakpoint-range($from: tablet, $to: desktopSmall) {
		padding: 1rem 2.5rem;
	}

	@include breakpoint-range($from: desktopSmall) {
		padding: var(--paddingContainer);
	}
}

footer {
	display: flex;
	bottom: 0;
	position: relative;
	padding: 1rem 0;
	font-size: 0.7rem;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	gap: 0.5rem;
	text-transform: uppercase;
	font-weight: 600;
}

section {
	min-height: 100vh;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;

	&:first-of-type {
		padding-top: 4rem;
	}

	& h1 {
		font-family: var(--accentFont);
		margin: 1rem auto;
		color: var(--textColor);
		letter-spacing: -1px;
		-webkit-text-stroke-width: 1px;
		-webkit-text-stroke-color: var(--backgroundColor);
	}

	@include breakpoint-range($from: mobile, $to: tablet) {
		padding: 0 1rem;
	}
}

.container__wide__tall {
	width: 100%;
	height: 100%;
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	align-items: center;
	gap: 1rem;
}

.thirds{
	display: flex;
	justify-content: space-between;
	align-items: center;
	flex-wrap: wrap;
	gap: 1rem;
	padding: 1rem 0;
	width: 100%;

	@include breakpoint-range( $from: mobile, $to: tablet ){
		flex-direction: column;
	}

	@include breakpoint-range($from: tablet, $to: desktopSmall) {
		flex-direction: row;
		align-content: flex-end;
	}
}

.glassmorphic {
	//  background-color: rgba(255, 255, 255, .4);
	padding: var(--paddingContainer);
	// box-shadow: var(--boxShadow);
	// border: 1px solid rgba(255, 255, 255, 0.23);
	border-radius: var(--borderRadius);
	@supports ((-webkit-backdrop-filter: none) or (backdrop-filter: none)) {
    // background-color: rgba(255, 255, 255, .5);
    -webkit-backdrop-filter: blur(20px);
    backdrop-filter: blur(20px);
}
}

.parallax {
	background-attachment: fixed;
	background-position: center;
	background-repeat: no-repeat;
	background-size: cover;
	min-height: 100vh;

	@include breakpoint-range($from: mobile, $to: tablet) {
		background-attachment: scroll;
	}
}

.subtleBackground {
	width: 100vw;
	height: 100vh;
	background-color: var(--backgroundColor);
background-image: url("https://www.transparenttextures.com/patterns/asfalt-dark.png");
	background-repeat: repeat;
/* This is mostly intended for prototyping; please download the pattern and re-host for production environments. Thank you! */
}

a {
	text-decoration: none;
	color: var(--primary);
	font-weight: 600;
}

a:hover {
	color: var(--secondary);
	transition: ease-in-out 0.2s;
}

h1,
h2,
h3,
h4,
h5,
h6 {
	color: var(--textColor);
	font: var(--headingFont);
}

h1 {
	font-size: 3.5rem;
	margin-bottom: 0rem;
	text-align: center;

	@media screen and (max-width: 750px) {
		font-size: 2rem;
	}
}

h2 {
	padding: 0.25em;
	font-size: 2.5rem;
	margin-top: 0;
	margin-bottom: 2rem;

	@media screen and (max-width: 750px) {
		font-size: 2rem;
	}
}

h3 {
	font-size: 1.5rem;
	margin-bottom: 0.5rem;
}

p {
	margin-bottom: 0.8rem;

	@media screen and (max-width: 768px) {
		padding: 0 2.5rem;
	}
}

p a {
	color: var(--textColor);
	border-bottom: 1px solid var(--borderColor);
}

li {
	margin-bottom: 0.5rem;
}

img,
image {
	border-radius: var(--borderRadius);
}

.head3 {
	margin-left: 10px;
	list-style-type: circle;
}
.head4 {
	margin-left: 20px;
	list-style-type: square;
}

kbd,
.kbd {
	display: inline-block;
	padding: 0.17em 0.6em 0.17em 0.4em;
	margin: 0 0.2em;
	position: relative;
	top: -0.2em;

	color: #333;
	font: normal 0.8em/1 sans-serif;
	text-decoration: none;
	box-shadow: inset 0 -0.2em 0.12em -0.15em rgba(255, 255, 255, 0.7);
	cursor: default;
	border-radius: 0.3em;

	background: -ms-radial-gradient(top, ellipse cover, #ddd 0%, white 100%);
	background: radial-gradient(ellipse at top right, #ddd 0%, white 100%);
}

kbd::before,
.kbd::before,
kbd::after,
.kbd::after {
	content: '';
	position: absolute;
	left: -0.17em;
	right: -0.17em;
	top: 0.1em;
	bottom: -0.4em;
	border-radius: 0.4em;
}

/*white highlight*/
kbd::before,
.kbd::before {
	z-index: -1;

	border: 1px solid gray;
	background: #a8a8a8;
	background: radial-gradient(circle 3em at -1.7em 0, white 0%, white 70%, rgba(255, 255, 255, 0) 80%);
}

kbd::after,
.kbd::after {
	z-index: -2;

	background: #a8a8a8;
	background: radial-gradient(ellipse 1em 1.7em at top right, #aaa 0%, #aaa 70%, #ccc 100%);
}

.kbd-down {
	top: 0em;
	box-shadow: inset 0 -0.2em 0.3em -0.1em rgba(200, 200, 200, 0.5);
}
.kbd-down::before,
.kbd-down::after {
	top: -0.1em;
	bottom: -0.2em;
}
.kbd-down::before {
	box-shadow: inset 0px 1px 6px 0px rgba(0, 0, 0, 1);
}

.head2 {
	margin-left: 10px;
	list-style-type: disc;
}
.head3 {
	margin-left: 30px;
	list-style-type: circle;
}

/*  */
.hider {
	overflow: hidden;
}

.sitename {
	color: var(--textColor);
}

.sitename:hover {
	color: var(--primary);
}

/* containers  */

.pancake {
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
}

.pancake-child {
	flex: 1 1 400px;
	margin: 1rem;
}

.half__column {
	width: 50%;
	display: flex;
	flex-direction: column;
	place-items: center;
	gap: 0.5rem;
	text-align: center;

	@include breakpoint-range($from: mobile, $to: tablet) {
		width: 100%;
	}
}

/* cards */

.blog__article {
	display: flex;
	justify-content: center;
	align-items: center;;
	background-color: var(--backgroundColor);
	border-radius: var(--borderRadius);
	text-align: center;
	box-shadow: var(--boxShadow);
	border: var(--border);

	&:hover {
cursor: pointer;
	background-color: var(--textColorFade);
	}

	& > * {
		margin: 0 auto;
	}

	@include breakpoint-range($from: mobile, $to: desktopSmall) {
		flex: 1 1 200px;
		max-width: 300px;
		flex-direction: column;
	}

	@include breakpoint-range($from: desktopSmall, $to: desktopLarge) {
		flex: 1 1 350px;
		height: 175px;
		max-width: 400px;
		flex-direction: row;
	}
}

.image-wrapper {
	margin: 0 auto;
}

.blog--article__section {
	padding: 1rem;
}

.blog--article__section a h2 {
	padding: 0;
	margin: 0.05rem 0;
	display: flex;
}

.blog--article__image {
	aspect-ratio: 1/1;
	object-fit: contain;
	border-radius: 2px;
	place-items: center;
}

.blog--article__date {
	font-size: 0.9rem;
	color: var(--textColorFade);
}

.article__title {
	color: var(--text);
	line-height: 1;
	font-family: var(--accentFont);
	font-size: 1rem;
	text-align: start;
}

.article__title:hover {
	cursor: pointer;
	color: var(--accent);
}

.article__description {
	font-size: 0.75rem;
	font-weight: 400;
	line-height: 1rem;
	color: var(--textColorFade);
	text-align: start;
	margin: 0.5rem 0;
}

.article__tags {
	display: flex;
	flex-wrap: wrap;
	justify-content: flex-start;
	gap: 0.5rem;
}

.article__tags .tag {
	padding: 0.2rem 0.5rem;
	border-radius: var(--borderRadius);
	color: var(--textColorFade);
	font-size: 0.55rem;
	font-weight: 400;
	line-height: 1.2rem;
}

@media (max-width: 768px) {
	.blog--article__title {
		font-size: 1.8rem;
	}

	.article__description {
		font-size: 0.7rem;
		padding: 0;
	}
}

@media (min-width: 768px) {
	.blog--article {
		margin-bottom: 1rem;
	}

	.blog--article__title {
		font-size: 2rem;
	}
}

article {
	margin: 0 auto;
	max-width: 55rem;

	display: flex;
	flex-direction: column;
}

article h1,
h2,
h3,
h4,
h5,
h6 {
	font-family: 'Sims Sans SC';
}

article p {
	font-size: 1.2rem;
	line-height: 1.6;
}

code {
	font-family: 'Fira Code', monospace;
}

pre {
	padding: 0.5rem;
	max-width: 80ch;
	font-size: 1rem;
	margin-bottom: 1rem;
	background-color: #35435f;
	color: var(--backgroundColor);
	border-radius: 5px;
}

article ul {
	list-style: none;
	padding: 0;
	margin: 0;
}

article li {
	margin-bottom: 0.5rem;
}

article li::marker {
	color: var(--textColorFade);
	text-indent: 1rem !important;
}

@media (max-width: 1024px) {
	.article--header {
		grid-template: flex;
		flex-direction: column;
	}
}

@media screen and (min-width: 1024px) {
	.article--header {
		grid-template: auto / auto 1fr;
	}
}

.article--heading {
	line-height: 1.2;
	margin-bottom: 1rem;
	font-size: 3.5rem;
	font-weight: 600;
	color: var(--primary);
	font-family: var(--accentFont);
}

.article--image {
	width: 100%;
	display: flex;
	margin-bottom: 0.5rem;
}

.article--image img {
	margin: 0 auto;
}

.article--description {
	color: var(--textColorFade);
	font-size: 1.2rem;
	margin-bottom: 3rem;
}

.article--details {
	width: 100%;
	display: flex;
	justify-content: space-between;
	align-items: center;
	margin-bottom: 2rem;
}

.article--created,
.article--readtime {
	color: var(--textColorFade);
	font-size: 1.2rem;
	margin-bottom: 1rem;
	display: inline-block;
}

/* TABS  */
.tabs {
	border: var(--border);
	padding: 2rem;
}

canvas {
	opacity: 0;
	touch-action: none;
	animation: fade-in 1s ease 0.3s forwards;
}

@keyframes fade-in {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

canvas:active {
	cursor: grabbing;
}

::-webkit-scrollbar {
	width: 3px;
	background-origin: padding-box;
}

::-webkit-scrollbar-track,
::-webkit-scrollbar-corner {
	// background: var(--backgroundColor);
	background: transparent;
}

::-webkit-scrollbar-thumb {
	background-color: var(--primary);
	border-radius: var(--borderRadius);
}

::-webkit-scrollbar-thumb:hover,
::-webkit-scrollbar-thumb:active {
	background: var(--primary);
}

