@import 'normalize';
@import 'animations';
@import 'mediaQuery';

// FONTS
@font-face {
	font-family: "Proxima Nova";
	font-display: swap;
	src: local("Proxima Nova"), url(../assets/fonts/ProximaNova.otf);
}

@font-face {
	font-family: "Sims Sans SC";
	font-display: swap;
	src: local("Sims Sans"), url(../assets/fonts/Sim-Sans-Bold-SC.otf);
}

@font-face {
	font-family: "Fira Code";
	font-display: swap;
	src: local("Fira Code Regular"), url(../assets/fonts/FiraCode-Regular.ttf);
}

@font-face {
	font-family: "Garamond";
	font-display: swap;
	src: url(../assets/fonts/adobe-garamond-pro-2/AGaramondPro-Regular.otf);
}

@font-face {
	font-family: "Garamond Italics";
	src: url(../assets/fonts/adobe-garamond-pro-2/AGaramondPro-Italic.otf);
}

@font-face {
	font-family: "Garamond Bold";
	src: url(../assets/fonts/adobe-garamond-pro-2/AGaramondPro-Bold.otf);
}

@font-face {
	font-family: "Garamond Bold Italics";
	src: url(../assets/fonts/adobe-garamond-pro-2/AGaramondPro-BoldItalic.otf);
}

@font-face {
	font-family: "Cattedrale";
	src: url(../assets/fonts/Cattedrale-Demo-Regular.ttf);
}

@font-face {
	font-family: "Cattedrale Ornamental";
	src: url(../assets/fonts/cattedrale-ornament.ttf);
}

@font-face {
	font-family: "Cattedrale Outline";
	src: url(../assets/fonts/cattedrale-outline.ttf);
}

@font-face {
	font-family: "Cattedrale Rough";
	src: url(../assets/fonts/cattedrale-rough.ttf);
}

@font-face {
	font-family: "Cattedrale Sliced";
	src: url(../assets/fonts/cattedrale-sliced.ttf);
}

$primary: #b39f03;
$secondary: #00a368;
$borderRadius: 5px;
$padding-container: 1.5rem 3rem;
$padding-object: 1rem;
$padding-object-small: 0.5rem;
$headingFont: 'Inter', sans-serif;
$accentFont: 'Sims Sans SC', sans-serif;
$body-font: 'Inter', sans-serif;
$blur: 20px;
$box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
$gradient: radial-gradient(circle farthest-corner at 10% 20%, $primary 0%, $secondary 90%);
$circle-gradient: radial-gradient(100% 100% at 100% 0, var(--primary) 0, var(--secondary) 100%);
$transition: all 0.3s ease-in-out;

// https://medium.com/@dmitriy.borodiy/easy-color-theming-with-scss-bc38fd5734d1
$themes: (
	light: (primary: $secondary,
		secondary: $primary,
		backgroundColor: #f2f0e9,
		textColor: #222,
		textColorFade: #030637,
		captionColor: #aaa,
		buttonTextColor: $secondary,
		buttonTextTransform: none,
		buttonTextHoverColor: $secondary,
		buttonColor: #fff,
		buttonBorder: 2px solid rgba(255, 255, 255, 0.35),
		border: 1px solid rgba(0, 0, 0, 0.1),
		borderColor: rgba(255, 255, 255, 0.4),
		borderRadius: $borderRadius,
		paddingContainer: $padding-container,
		paddingObject: $padding-object,
		paddingObjectSmall: $padding-object-small,
		boxShadow: 1px 4px 16px 0 rgba(0, 0, 0, 0.2),
		transition: $transition,
		loadingBackground: $gradient,
		loadingTextColor: #fff,
		bodyFont: $body-font,
		headingFont: $headingFont,
		accentFont: $accentFont,
		backgroundImage: url('https://www.transparenttextures.com/patterns/arches.png'),
		// backgroundImage: url('https://www.transparenttextures.com/patterns/grid-me.png')
	),
	dark: (primary: $primary,
		secondary: $secondary,
		backgroundColor: #222,
		textColor: #ddd,
		textColorFade: rgba(221, 221, 221, 0.3),
		captionColor: #aaa,
		buttonTextColor: #aaa,
		buttonTextTransform: uppercase,
		buttonTextHoverColor: #ddd,
		buttonColor: #333,
		buttonBorder: 1px solid rgba(0, 0, 0, 0.35),
		border: 1px solid rgba(0, 0, 0, 0.23),
		borderColor: rgba(0, 0, 0, 0.23),
		borderRadius: $borderRadius,
		paddingContainer: $padding-container,
		paddingObject: $padding-object,
		paddingObjectSmall: $padding-object-small,
		boxShadow: 1px 4px 16px 0 rgba(0, 0, 0, 0.2),
		transition: $transition,
		loadingBackground: $gradient,
		loadingTextColor: #fff,
		bodyFont: $body-font,
		headingFont: $headingFont,
		accentFont: $accentFont,
		backgroundImage: url('https://www.transparenttextures.com/patterns/asfalt-light.png'),
		articleCardBackground: #910A67,
	),
);

// source: https://stackoverflow.com/questions/57815278/scss-theming-with-dynamic-variables
@each $name,
$map in $themes {
	.#{$name} {

		@each $key,
		$value in $map {
			--#{$key}: #{$value};
		}
	}
}

:root {
	--mask: linear-gradient(#000 0 0) 50%/calc(100% - 46.25px) calc(100% - 46.25px) no-repeat,
		radial-gradient(farthest-side, #000 98%, #0000) 0 0/50px 50px round;
	--primary: #331200;
	--secondary: #b12603;
	--backgroundColor: #f2f0e9;
	--textColor: #222;
	--textColorFade: #030637;
	--captionColor: #aaa;
	--buttonTextColor: #720455;
	--buttonTextTransform: none;
	--buttonTextHoverColor: #720455;
	--buttonColor: #fff;
	--buttonBorder: 2px solid rgba(255, 255, 255, 0.35);
	--border: 1px solid rgba(0, 0, 0, 0.1);
	--borderColor: rgba(255, 255, 255, 0.4);
	--sharpBorderRadius: 5px;
	--borderRadius: 10px;
	--buttonBorderRadius: 50px;
	--paddingContainer: 1.5rem 3rem;
	--paddingObject: 1rem;
	--paddingObjectSmall: 0.5rem;
	--boxShadow: 1px 4px 16px 0 rgba(0, 0, 0, 0.2);
	--transition: all 0.3s ease-in-out;
	--loadingBackground: radial-gradient(circle farthest-corner at 10% 20%, #b797c5 0%, #720455; 90%);
	--loadingTextColor: #fff;
	--bodyFont: 'Garamond', serif;
	--headingFont: 'Cattedrale', serif;
	--accentFont: 'Cattedrale Rough', serif;
	// --backgroundImage: url('https://www.transparenttextures.com/patterns/arches.png');
	--backgroundImage: url('https://www.transparenttextures.com/patterns/grid-me.png');
	--hr-line-offset: 25%;
	--hr-color: var(--primary);
}



html {
	color: var(--textColor);
	line-height: 1.6;
	font-family: var(--bodyFont);
}

body {
	background-color: var(--backgroundColor);
	// background-image: var(--backgroundImage);
	// background-repeat: repeat;
}

main {
	margin: 0 auto;
}

header {
	position: sticky;
	top: 0;
	z-index: 5;
	backdrop-filter: blur(20px);

	& > nav {
		width: 100%;
		display: flex;
		justify-content: space-between;
		align-items: center;

		@include breakpoint-range($from: mobile) {
			flex-direction: column;
			justify-content: center;
		}

		@include breakpoint-range($from: desktopSmall) {
			flex-direction: row;
			justify-content: space-between;
			padding: 0 1rem;
		}
	}
}

footer {
	display: flex;
	bottom: 0;
	position: relative;
	padding: 0.75rem 0;
	font-size: 0.9rem;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	gap: 0.5rem;
	text-transform: uppercase;
	font-family: "Inter";
}

.full-height {
	min-height: 100vh;
}

section {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;

	@include breakpoint-range($from: mobile) {
		padding: 0 1rem;
	}

	@include breakpoint-range($from: tablet) {
		margin: 0 1rem;
		padding: 0 1.5rem;
	}

	@include breakpoint-range($from: desktopSmall) {
		padding: 0;
		margin: 0;
		margin-bottom: 3rem;
	}
}

hr {
	border-style: double;
	border-image-slice: 1;
	border-image-source: linear-gradient(to right,
			transparent,
			var(--hr-color) calc(50% - var(--hr-line-offset)),
			var(--hr-color) calc(50% + var(--hr-line-offset)),
			transparent);
}

.hr-hands {
	border: none;

	&::after {
		background: url(../assets/images/hr.svg) no-repeat top center;
		content: "";
		display: block;
		height: 80px;
		margin: 4rem auto;
		position: relative;
		top: -50px;
		border: 0;
	}
}

progress {

	height: 10px;
	margin: 0 1rem;
	border: var(--border);
	border-radius: var(--borderRadius);
	background: var(--backgroundColor);

	@include breakpoint-range($from: mobile) {
		display: none;
	}

	@include breakpoint-range($from: tablet) {
		display: inline-block;
		width: 25%;
	}

	&::-moz-progress-bar,
	&::-webkit-progress-bar {
		border-radius: 0 20px 20px 0;
		width: 0%;
		height: 100%;
		transition: width;
		transition-duration: 1s;
		transition-timing-function: cubic-bezier(.36, .55, .63, .48);
		background-color: var(--primary);
		background-image: url("data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23f0f8f3' fill-opacity='0.4' fill-rule='evenodd'/%3E%3C/svg%3E");
	}
}

fieldset {
	border-radius: var(--buttonBorderRadius);
	padding: var(--paddingContainer);
	border: none;
	// border: 1px dotted var(--primary);
	backdrop-filter: blur(20px);

	& label {
		color: var(--primary);
		font-weight: 300;
	}

	& input[type="checkbox"] {
		height: 2rem;
		width: 2rem;
		color: --primary;
		border-radius: var(--buttonBorderRadius);
		-webkit-appearance: none;
		// background: none;
		border: 2px solid var(--primary);
		outline: 0;

		&:checked {
			box-shadow: none;
			background-color: var(--primary);
			background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='28' height='28' viewBox='0 0 24 24'%3E %3Cpath d='M15.88 8.29L10 14.17l-1.88-1.88a.996.996 0 1 0-1.41 1.41l2.59 2.59c.39.39 1.02.39 1.41 0L17.3 9.7a.996.996 0 0 0 0-1.41c-.39-.39-1.03-.39-1.42 0z' fill='%23fff'/%3E %3C/svg%3E");
		}

		&:disabled {
			background-color: #CCD3D8;
			opacity: 0.84;
			cursor: not-allowed;
		}
	}
}

#blog {
	display: flex;
	justify-content: center;
	align-items: baseline;
	text-align: center;
	gap: 1.5rem;

	@include breakpoint-range($from: mobile) {
		& > div {
			width: 100%;
		}

		flex-direction: column;
	}

	@include breakpoint-range($from: desktopSmall) {
		& > div {
			width: 50%;
		}

		flex-direction: row;
	}
}

.container__wide__tall {
	width: 100%;
	height: 100%;
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	align-items: center;
	gap: 1rem;
}

.thirds {
	display: flex;
	justify-content: space-between;
	align-items: center;
	flex-wrap: wrap;
	gap: 1rem;
	padding: 1rem 0;
	width: 100%;

	@include breakpoint-range($from: mobile, $to: tablet) {
		flex-direction: column;
	}

	@include breakpoint-range($from: tablet, $to: desktopSmall) {
		flex-direction: row;
		align-content: flex-end;
	}
}

.frame {
	border-image-source: url(../../public/img/album/goldframe_horizantal.png);
	overflow: hidden;
	z-index: 10;

	@include breakpoint-range($from: mobile, $to: tablet) {
		border: none
	}

	@include breakpoint-range($from: tablet) {
		border-image-slice: 140;
		border-image-repeat: stretch;
		border-width: 70px;
		border-style: solid;
	}

	& img {
		object-fit: cover;
	}
}

.glassmorphic {
	//  background-color: rgba(255, 255, 255, .4);
	// padding: var(--paddingContainer);
	// box-shadow: var(--boxShadow);
	// border: 1px solid rgba(255, 255, 255, 0.23);
	border-radius: var(--borderRadius);

	@supports ((-webkit-backdrop-filter: none) or (backdrop-filter: none)) {
		// background-color: rgba(255, 255, 255, .5);
		// -webkit-backdrop-filter: blur(20px);
		backdrop-filter: blur(20px);
	}

	@include breakpoint-range($from: mobile, $to: tablet) {
		backdrop-filter: none;
		background-color: var(--backgroundColor);
	}
}

.parallax {
	background-attachment: fixed;
	background-position: center;
	background-repeat: no-repeat;
	background-size: cover;
	min-height: 100vh;

	@include breakpoint-range($from: mobile, $to: tablet) {
		background-attachment: scroll;
	}
}

.subtleBackground {
	width: 100vw;
	height: 100vh;
	background-color: var(--backgroundColor);
	background-image: url('https://www.transparenttextures.com/patterns/argyle.png');
	background-repeat: repeat;
	/* This is mostly intended for prototyping; please download the pattern and re-host for production environments. Thank you! */
}

a {
	text-decoration: none;
	color: var(--primary);
	font-weight: 500;

	&:hover {
		color: var(--secondary);
		transition: ease-in-out 0.2s;
	}
}

.internal-link {
	color: var(--secondary);

	&::before {
		content: "/";
	}

	&:hover {
		color: var(--primary)
	}
}

i {
	font-family: "Garamond Italics";
}

b {
	font-weight: 500;
	font-family: "Garamond Bold";
}

b i {
	font-family: "Garamond Bold Italics";
}

h1,
h2,
h3,
h4,
h5,
h6 {
	margin: auto;
	color: var(--textColor);
	font-family: "Garamond", serif;
	font-weight: 300;
	text-align: center;
}

h1 {
	font-size: clamp(2.5rem, 2vw, 5rem);
	margin-bottom: 0.5rem;
	max-width: 40rem;
}

h2 {
	font-size: clamp(2rem, 1.8vw, 3.5rem);
	margin-top: 0;
	margin-bottom: 2rem;
	max-width: 45rem;
}

h3 {
	font-size: clamp(1.5rem, 1.6vw, 3rem);
}

h4 {
	font-size: clamp(1.3rem, 1.4vw, 2rem);
}

h5 {
	font-size: clamp(1.2rem, 1.3vw, 1.5rem);
}

.ornamental {
	font-family: "Cattedrale Ornamental";
	font-size: 5rem;
}

ul {
	@include breakpoint-range($from: mobile, $to: tablet) {
		margin: 0 auto;
		margin-left: 1rem;
	}
}

li {
	text-indent: 1rem;

	&::marker {
		content: url(../assets/images/blood-drop.svg);
		scale: 0.75;
		margin-bottom: 0.75rem;
	}
}

p,
li {
	font-size: clamp(1.2rem, -0.8750rem + 8.3333vw, 1.6rem);
}

p > a,
li > a {
	color: var(--secondary);

	&:hover {
		color: var(--primary);
	}
}

img,
image {
	border-radius: var(--borderRadius);
}

.head3 {
	margin-left: 10px;
	list-style-type: circle;
}

.head4 {
	margin-left: 20px;
	list-style-type: square;
}

kbd,
.kbd {
	display: inline-block;
	padding: 0.17em 0.6em 0.17em 0.4em;
	margin: 0 0.2em;
	position: relative;
	top: -0.2em;

	color: #333;
	font: normal 0.8em/1 sans-serif;
	text-decoration: none;
	box-shadow: inset 0 -0.2em 0.12em -0.15em rgba(255, 255, 255, 0.7);
	cursor: default;
	border-radius: 0.3em;

	background: -ms-radial-gradient(top, ellipse cover, #ddd 0%, white 100%);
	background: radial-gradient(ellipse at top right, #ddd 0%, white 100%);
}

kbd::before,
.kbd::before,
kbd::after,
.kbd::after {
	content: '';
	position: absolute;
	left: -0.17em;
	right: -0.17em;
	top: 0.1em;
	bottom: -0.4em;
	border-radius: 0.4em;
}

/*white highlight*/
kbd::before,
.kbd::before {
	z-index: -1;

	border: 1px solid gray;
	background: #a8a8a8;
	background: radial-gradient(circle 3em at -1.7em 0, white 0%, white 70%, rgba(255, 255, 255, 0) 80%);
}

kbd::after,
.kbd::after {
	z-index: -2;

	background: #a8a8a8;
	background: radial-gradient(ellipse 1em 1.7em at top right, #aaa 0%, #aaa 70%, #ccc 100%);
}

.kbd-down {
	top: 0em;
	box-shadow: inset 0 -0.2em 0.3em -0.1em rgba(200, 200, 200, 0.5);
}

.kbd-down::before,
.kbd-down::after {
	top: -0.1em;
	bottom: -0.2em;
}

.kbd-down::before {
	box-shadow: inset 0px 1px 6px 0px rgba(0, 0, 0, 1);
}

.head2 {
	margin-left: 10px;
	list-style-type: disc;
}

.head3 {
	margin-left: 30px;
	list-style-type: circle;
}

/*  */
.hider {
	overflow: hidden;
}

.text-center {
	text-align: center;
}

.no-marker {
	list-style: none;

	&::marker {
		content: none;
	}
}

.badge {
	display: inline-flex;
	place-items: center;
	border: var(--border);
	border-radius: var(--borderRadius);
	text-decoration: none;
}

.flex {
	display: flex;
	place-items: center;
	flex-wrap: wrap;
	gap: 1rem;
	margin: auto;
	justify-content: center;
}

.outerglow {
	&:hover {
		box-shadow: 0px 0px 10px 5px var(--secondary);
	}
}

/* containers  */

.pancake {
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
}

.pancake-child {
	@include breakpoint-range($from: mobile, $to: tablet) {
		flex: 1 1 100%;
		margin: 1rem;
	}

	@include breakpoint-range($from: desktopSmall) {
		flex: 1 1 300px;
		margin: 0.25rem;
	}

}

.img-grid {
	display: flex;
	flex-wrap: wrap;
	flex: 1 1 200px;
	justify-content: center;
	gap: 0.5rem;
	filter: saturate(25%);
}

.column {
	flex-direction: column;
}

.half__column {
	width: 50%;
	display: flex;
	flex-direction: column;
	place-items: center;
	gap: 0.5rem;
	text-align: center;

	@include breakpoint-range($from: mobile, $to: tablet) {
		width: 100%;
	}
}

.desktop {
	@include breakpoint-range($from: mobile, $to: tablet) {
		display: none;
	}

	@include breakpoint-range($from: desktopSmall) {
		display: flex;
	}
}

.image__wrapper {
	margin: auto;
}

.prose {
	max-width: 45rem;
	text-align: justify;
}

.prose-small {
	max-width: 15rem;
}

article {
	margin: 0 auto;
	max-width: 50rem;
	text-align: justify;

	display: flex;
	flex-direction: column;
}

article h1,
article h2,
article h3,
article h4,
article h5,
article h6 {
	text-align: center;
}

article h1 {
	font-size: clamp(2rem, 3vw, 4.5rem);
	font-family: "Cattedrale";
	margin: 0;
}

article h2 {
	font-size: clamp(1.5rem, 2vw, 3rem);
	margin-top: 0;
}

article h3 {
	font-size: 2rem;
}

article .title {
	margin: 0;
}

article .info {
	display: flex;
	flex-direction: column;
	justify-content: center;
	margin-bottom: 4rem;
}

article p {

	@include breakpoint-range($from: mobile) {
		margin: 1rem 1.5rem;
	}

	@include breakpoint-range($from: tablet) {
		margin: 1rem 2rem;
	}

	@include breakpoint-range($from: desktopSmall) {
		margin: 1rem 0;
	}
}

code {
	font-family: 'Fira Code', monospace;
}

.code {
	& .filename {
		margin: 0.5rem 0;
		padding: 0.5em 3rem;
		border-radius: var(--borderRadius);
		width: fit-content;
		background-color: var(--primary);
		color: var(--backgroundColor);
	}

}

.shiki {
	width: 100%;
	padding: 1rem;
	border-radius: var(--borderRadius);
	counter-reset: step;
	counter-increment: step 0;

	.line {
		&::before {
			counter-increment: step;
			margin-right: 6rem;
			display: inline-block;
			text-align: right;
		}
	}
}

article ul,
article ol {

	@include breakpoint-range($from: mobile) {
		margin: 1rem 1rem;
	}

	@include breakpoint-range($from: tablet) {
		margin: 1rem 2rem;
	}

	@include breakpoint-range($from: desktopSmall) {
		margin: 2rem 0;
	}
}

article li {
	margin-bottom: 0.8rem;
}

article li::marker {
	color: var(--textColor);
	text-indent: 1rem !important;
}

@media (max-width: 1024px) {
	.article--header {
		display: flex;
		flex-direction: column;
	}
}

@media screen and (min-width: 1024px) {
	.article--header {
		grid-template: auto / auto 1fr;
	}
}

.article--heading {
	line-height: 1.2;
	margin-bottom: 1rem;
	font-size: 2.5rem;
	font-weight: 300;
	// color: var(--primary);
}

.article--description {
	opacity: 0.65;
	font-size: 1.1rem;
	margin-bottom: 2rem;
}

.article--details {
	opacity: 0.65;
	width: 100%;
	display: flex;
	justify-content: space-between;
	align-items: center;
}

.article--created,
.article--readtime {
	font-size: 1rem;
	margin-bottom: 0;
	display: inline-block;
}

/* TABS  */
.tabs {
	border: var(--border);
	padding: 2rem;
}

canvas {
	opacity: 0;
	touch-action: none;
	animation: fade-in 1s ease 0.3s forwards;
}

@keyframes fade-in {
	from {
		opacity: 0;
	}

	to {
		opacity: 1;
	}
}

canvas:active {
	cursor: grabbing;
}

*::-webkit-scrollbar {
	width: 3px;
	background-origin: padding-box;
}

*::-webkit-scrollbar-track,
*::-webkit-scrollbar-corner {
	// background: var(--backgroundColor);
	background: transparent;
}

*::-webkit-scrollbar-thumb {
	background-color: var(--primary);
	border-radius: var(--borderRadius);
}

.recolor {
	filter: invert(9%) sepia(22%) saturate(4893%) hue-rotate(6deg) brightness(95%) contrast(102%);
}

.faded {
	opacity: 0.85;
	// the CSS filter only works on moving colours from black to the primary color 

	&:hover {
		opacity: 1;
	}
}

// This project styling cannot go in CSS modules
//  see link below for why
// https://stackoverflow.com/questions/72000811/nextjs-avoid-change-css-classname-after-run

.project__status {
	content: ' ';
	margin-left: 0.5rem;
	border-radius: 50%;
	// background: var(--textColorFade);
	width: 8px;
	height: 8px;
	display: inline-block;
	vertical-align: middle;
}

span.project__status.ongoing {
	background: var(--secondary);
}

span.project__status.completed {
	background: var(--primary);
}

span.project__status.archived {
	background: red;
}

.desktop-block {
	@include breakpoint-range($from: mobile) {
		display: none;
	}

	@include breakpoint-range($from: desktopSmall) {
		display: block;
	}
}

.desktop-flex {
	@include breakpoint-range($from: mobile) {
		display: none;
	}

	@include breakpoint-range($from: desktopSmall) {
		display: flex;
	}
}

.mobile-block {
	@include breakpoint-range($from: mobile) {
		display: block;
	}

	@include breakpoint-range($from: desktopSmall) {
		display: none;
	}
}

.mobile-flex {
	@include breakpoint-range($from: mobile) {
		display: flex;
	}

	@include breakpoint-range($from: desktopSmall) {
		display: block;
	}
}

// CodeHike Component CSS
.ch-codeblock .ch-code-button {
	display: none;
}

.ch-codeblock:hover .ch-code-button {
	display: block;
}

.justify-between {
	justify-content: space-between;
}

.items-center {
	place-items: center;
	;
}

.my-1 {
	margin: 1rem 0;
}

.mx-1 {
	margin: 0 1rem;
}

.mb-4 {
	margin-bottom: 2rem;
}

:root {
	--progress-bar-color: $lighten(var(--backgroundColor));
	--progress-value-color: var(--primary);
	--progress-empty-color-h: 4.1;
	--progress-empty-color-s: 89.6;
	--progress-empty-color-l: 58.4;
	--progress-filled-color-h: 122.4;
	--progress-filled-color-s: 39.4;
	--progress-filled-color-l: 49.2;
}

progress[value] {
	appearance: none;
	width: 150px;
	height: 6px;
	--border-radius: 10px;
	border-radius: var(--border-radius);
	border: var(--border);
	--progress-value-string: attr(value) '%';
	--progress-max-decimal: attr(value) / attr(max);
	--progress-value-decimal: attr(value) / attr(max);

	@supports selector(::-moz-progress-bar) {
		--progress-value-decimal: attr(value) / attr(max);
	}

	// --progress-value-percent: calc(var(--progress-value-decimal) * 100%);
	// --progress-value-color: hsl(calc((var(--progress-empty-color-h) + (var(--progress-filled-color-h) - var(--progress-empty-color-h)) * var(--progress-value-decimal)) * 1deg) calc((var(--progress-empty-color-s) + (var(--progress-filled-color-s) - var(--progress-empty-color-s)) * var(--progress-value-decimal)) * 1%) calc((var(--progress-empty-color-l) + (var(--progress-filled-color-l) - var(--progress-empty-color-l)) * var(--progress-value-decimal)) * 1%));
	animation: calc(3s * var(--progress-max-decimal)) linear 0.5s 1 normal both progress;
}

progress[value]::-webkit-progress-bar {
	background-color: var(--progress-bar-color);
	border-radius: var(--border-radius);
	overflow: hidden;
}

progress[value]::-webkit-progress-value {
	width: attr(value) !important;
	background-color: var(--progress-value-color);
	border-radius: var(--border-radius);
}

progress[value]::-moz-progress-bar {
	width: attr(value) !important;
	background-color: var(--progress-value-color);
	border-radius: var(--border-radius);
}


@keyframes progress {
	from {
		--progress-value: 0;
	}

	to {
		--progress-value: attr(value);
	}
}
